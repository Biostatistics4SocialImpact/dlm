## New Generics
## -------------------------------------------------------------------


is.SmoothLag <- function(object, ...) inherits(object, "SmoothLag")
is.Dlm <- function(object, ...)       inherits(object, "Dlm")
is.FreqDlm <- function(object, ...)   inherits(object, "FreqDlm")
is.BayesDlm <- function(object, ...)  inherits(object, "BayesDlm")


makeDlm <- function(object, ...) UseMethod("makeDlm", object)
## isREML <- function(object, ...) UseMethod("isREML", object)



## random effects precision vector
setGeneric("rePrec", function(object, ...) standardGeneric("rePrec"))

## random effects variances
setGeneric("reVar", function(object, ...) standardGeneric("reVar"))


## random effects indices (list)
setGeneric("reIndex", function(object, ...) standardGeneric("reIndex"))


## vectorization of coefficients
setGeneric("vcoef", function(object, ...) standardGeneric("vcoef"))



#' @title Extract Lag Basis Matrix
#'
#' @description
#' Extract lag basis matrix, \eqn{\Omega}
#'
#' @return
#' A square numeric matrix
#'
#' @details
#' \code{omega} is S4 generic.
setGeneric("omega", function(object, ...) standardGeneric("omega"))



## #' @title Extract Fixed Effects
## #'
## #' @description
## #' Returns a vector of fixed effects coefficients from a fitted
## #' mixed effects model.
## #'
## #' @return
## #' A numeric vector
## #'
## #' @details
## #' \code{fixef} is S4 generic.
## #'
## setGeneric("fixef",
##            function(object) standardGeneric("fixef")
##            )



## #' @title Extract Random Effects
## #'
## #' @description
## #' Returns a vector of random effects coefficients from a fitted
## #' mixed effects model.
## #'
## #' @return
## #' A numeric vector
## #'
## #' @details
## #' \code{ranef} is S4 generic.
## #'
## setGeneric("ranef",
##            function(object) standardGeneric("ranef")
##            )



#' @title Extract Standard Errors of Fixed Effects
#'
#' @description
#' Returns a vector of fixed effects standard errors from a fitted
#' mixed effects model.
#'
#' @return
#' A numeric vector
#'
#' @details
#' \code{fixef} is S4 generic.
#'
setGeneric("se.fixef",
           function(object) standardGeneric("se.fixef")
           )


#' @title Extract Standard Errors of Random Effects
#'
#' @description
#' Returns a vector of random effects standard errors from a fitted
#' mixed effects model.
#'
#' @return
#' A numeric vector
#'
#' @details
#' \code{fixef} is S4 generic.
#'
setGeneric("se.ranef",
           function(object) standardGeneric("se.ranef")
           )



#' @title Extract Distributed Lag Scale Matrix
#'
#' @description
#' Return lag coefficient scale matrix, S, such that the distributed lag
#' coefficients fit by the model are obtained via the transformation
#' \eqn{\beta = S \theta}{\beta = S * \theta}. S should be invertable.
#'
#' @param object a fitted model object
#'
#' @return A square numeric matrix
#'
#' @details
#' \code{scaleMat} is S4 generic.
#'
setGeneric("scaleMat",
           function(object, ...) standardGeneric("scaleMat")
           )



#' @title Extract Natural Scale Model Parameters 'Theta'
#'
#' @description
#' Extract \eqn{\theta} coefficients from a fitted model
#'
#' @param object a fitted model object
#'
#' @return A numeric vector
#'
#' @details
#' Returns the natural scale coefficients
#' \eqn{\theta = S^{-1} \beta}{\theta = S^-1 * \beta} given some invertable
#' scale matrix, S.
#'
#' \code{theta} is S4 generic.
#'
setGeneric("theta",
           function(object, ...) standardGeneric("theta")
           )


#' @title Extract Natural Scale Coefficient Covariance Matrix
#'
#' @description
#' Extract \eqn{var \theta} matrix from a fitted model
#'
#' @param object a fitted model object
#'
#' @return A square numeric matrix
#'
#' @details
#' Returns the covariance matrix for the natural scale coefficients,
#' \eqn{\theta}.
#'
#' \code{vcovTheta} is S4 generic.
#'
setGeneric("vcovTheta",
           function(object, ...) standardGeneric("vcovTheta")
           )



#' @title Lag Coefficient Change Points
#'
#' @return An integer vector
#'
setGeneric("changePoint", function(object, ...) standardGeneric("changePoint"))












## Methods for LagBasis class
## -------------------------------------------------------------------


#' @describeIn omega Method for "\code{LagBasis}" objects
setMethod("omega", signature = "LagBasis",
          function(object, ...)  cbind(object@C0, object@K1)
          )


#' @title Predict New Values for Fitted Lag Basis
#'
#' @param object A \code{\link{LagBasis}} object
#'
#' @description
#' Not yet implemented
#'
predict.LagBasis <- function(object, ...) {
  stop ("Not yet Implemented")
}


## Methods for LagBasis class
## -------------------------------------------------------------------


#' @describeIn omega Method for "\code{LagBasis}" objects
setMethod("omega", signature = "LagBasis",
          function(object, ...)  cbind(object@C0, object@K1)
          )


#' @title Predict New Values for Fitted Lag Basis
#'
#' @param object A \code{\link{LagBasis}} object
#'
#' @description
#' Not yet implemented
#'
predict.LagBasis <- function(object, ...) {
  stop ("Not yet Implemented")
}
