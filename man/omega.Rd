% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGeneric.R, R/methods-LagBasis.R,
%   R/methods-SmoothLag.R
\docType{methods}
\name{omega}
\alias{omega}
\alias{omega,LagBasis-method}
\alias{omega,SmoothLag-method}
\title{Extract lag basis matrix}
\usage{
omega(object, ...)

\S4method{omega}{LagBasis}(object, ...)

\S4method{omega}{SmoothLag}(object, ...)
}
\arguments{
\item{object}{An object storing details of the basis decomposition}

\item{...}{additional arguments}
}
\value{
A square numeric matrix
}
\description{
Extract lag basis matrix, \eqn{\Omega = [C_0, K_1]}. See
the definition below (which is borrowed from \code{\link{basis}})
}
\section{Methods (by class)}{
\itemize{
\item \code{LagBasis}: Method for \code{"\link{LagBasis}"} objects

\item \code{SmoothLag}: Method for \code{"\link{LagBasis}"} objects
}}

\section{Decomposition}{

Once a basis function (\eqn{\delta(\cdot, \cdot)}{\delta()})
and radii (\eqn{r}) are chosen, define the matrix,
\eqn{C_{1, ij} = \delta(r_i, r_j)}{C_1[i, j] = \delta(r_i, r_j)},
and let,

\deqn{C_0 = [1_L, r]}{C_0 = [1, r]}
\deqn{C_1 = Q R}{C_1 = Q * R}
\deqn{M_1 = Q_{-(1:2)}}{M_1 = Q[-(1:2)]}
\deqn{K_1 = C_1 M_1 (M_1^T C_1 M_1)^{-\frac{1}{2}}}{K_1 = C_1 * M_1 * (M_1' * C_1 * M_1)^-0.5}

where \eqn{A_{-j}}{A[-j]} denotes a matrix \eqn{A} with column(s) \eqn{j}
removed. Then the (scaled) distributed lag effects are
\eqn{\beta = C_0 \alpha + K_1 b}{\beta = C_0 * \alpha + K_1 * b}, where
\eqn{b_\ell \sim \mathrm{N}(0, \sigma^2_b)}{b_l ~ N(0, \sigma^2_b)},
for \eqn{\ell = 1, \ldots, L - 2}{l = 1, ..., L - 2}.
}

