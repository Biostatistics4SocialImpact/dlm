% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bases.R
\name{basis}
\alias{basis}
\title{Basis vectors}
\usage{
basis(x, center = TRUE, scale = FALSE, .fun = NULL, ...)
}
\arguments{
\item{x}{radii that define ring-shaped areas around participant locations}

\item{center}{if \code{TRUE} (the default), \code{x} will be mean
centered prior to computing the basis. Otherwise, if given a
\code{numeric} value, \code{x} will be centered at \code{center}}

\item{scale}{if \code{TRUE} (default = \code{FALSE}), parameter \code{x}
will be scaled by \code{sd(x)}. Otherwise, if given a
\code{numeric} value, \code{x} will be scaled by \code{scale}}

\item{.fun}{a function to define the type of basis. The default is to compute
a cubic radial basis based on pairwise cubed absolute differences
among the radii. See Details}

\item{...}{other parameters passed to \code{.fun}}
}
\value{
An object of class \code{\link{LagBasis}}
}
\description{
Constructs a set of basis vectors \eqn{C_0} and \eqn{K_1} used to
constrain distributed lag coefficients, \eqn{\beta(\cdot, \cdot)}{\beta},
using splines. The basis vectors depend on the radii that define
ring-shaped areas around participant locations.
Typical usage relies on calling basis application functions, like
\code{\link{cr}} (e.g. in \code{\link{dlm}} model
formulas); users should not often have to interact with \code{basis}
directly.
}
\details{
Alternative distance functions, \code{.fun}, may be specified, and
error checking on the user's choice of \code{.fun} is deliberately
missing. Proper candidates for \code{.fun} should return an
\eqn{(L \times L)} matrix, where \eqn{L} is the same as \code{length(x)};
elements of this matrix are typically non-negative.

In addition, new distance function definitions should follow the idiom:

\code{function(x, y, ...)}

\code{  if (missing(y))  y <- x}

\code{  ...}

The default value of \code{.fun} computes cubic radial distance,
which amounts to \code{abs(outer(x, y, "-"))^3}; the computed vectors are
then transformed following Rupert, Wand, and Carroll (2003), such that
the spline can be fitted (and penalized) as a mixed-model.
}
\section{Decomposition}{

Once a basis function (\eqn{\delta(\cdot, \cdot)}{\delta()})
and radii (\eqn{r}) are chosen, define the matrix,
\eqn{C_{1, ij} = \delta(r_i, r_j)}{C_1[i, j] = \delta(r_i, r_j)},
and let,

\deqn{C_0 = [1_L, r]}{C_0 = [1, r]}
\deqn{C_1 = Q R}{C_1 = Q * R}
\deqn{M_1 = Q_{-(1:2)}}{M_1 = Q[-(1:2)]}
\deqn{K_1 = C_1 M_1 (M_1^T C_1 M_1)^{-\frac{1}{2}}}{K_1 = C_1 * M_1 * (M_1' * C_1 * M_1)^-0.5}

where \eqn{A_{-j}}{A[-j]} denotes a matrix \eqn{A} with column(s) \eqn{j}
removed. Then the (scaled) distributed lag effects are
\eqn{\beta = C_0 \alpha + K_1 b}{\beta = C_0 * \alpha + K_1 * b}, where
\eqn{b_\ell \sim \mathrm{N}(0, \sigma^2_b)}{b_l ~ N(0, \sigma^2_b)},
for \eqn{\ell = 1, \ldots, L - 2}{l = 1, ..., L - 2}.
}

\references{
Rupert D, Wand MP, & Carroll RJ (2003) Semiparametric
Regression. New York: Cambridge University Press.
}
\seealso{
\code{\link{cr}}, \code{\link{dlm}}
}
